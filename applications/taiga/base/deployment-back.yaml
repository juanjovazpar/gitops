apiVersion: apps/v1
kind: Deployment
metadata:
  name: taiga-back
  namespace: taiga
spec:
  replicas: 1
  selector:
    matchLabels:
      app: taiga-back
  template:
    metadata:
      labels:
        app: taiga-back
    spec:
      restartPolicy: Always
      initContainers:
        - name: wait-for-taiga-db
          image: busybox
          command: ['sh', '-c', 'until nc -z taiga-db 5432; do sleep 2; done']
        - name: wait-for-taiga-events-rabbitmq
          image: busybox
          command:
            [
              'sh',
              '-c',
              'until nc -z taiga-events-rabbitmq 5672; do sleep 2; done',
            ]
        - name: wait-for-taiga-async-rabbitmq
          image: busybox
          command:
            [
              'sh',
              '-c',
              'until nc -z taiga-async-rabbitmq 5672; do sleep 2; done',
            ]
        - name: create-superuser
          image: taigaio/taiga-back:latest
          command: ['/bin/bash', '-c']
          args:
            - |
              python manage.py migrate --noinput && \
              python manage.py shell -c "
              import os
              from django.contrib.auth import get_user_model
              from django.db import IntegrityError

              User = get_user_model()

              username = os.getenv('TAIGA_ADMIN_USERNAME')
              email = os.getenv('TAIGA_ADMIN_EMAIL')
              password = os.getenv('TAIGA_ADMIN_PASSWORD')

              try:
                  if not User.objects.filter(email=email).exists():
                      User.objects.create_superuser(username=username, email=email, password=password)
                      print(f'Superuser {username} created.')
                  else:
                      print(f'Superuser with email {email} already exists.')
              except IntegrityError:
                  print(f'Error: Superuser with email {email} already exists, skipping creation.')
              except Exception as e:
                  print(f'An unexpected error occurred: {e}. Skipping superuser creation.')
              "
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_USER
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_NAME
            - name: TAIGA_ADMIN_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_ADMIN_USERNAME
            - name: TAIGA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: TAIGA_ADMIN_PASSWORD
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: POSTGRES_PASSWORD
            - name: TAIGA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: SECRET_KEY
      containers:
        - name: taiga-back
          image: taigaio/taiga-back:latest
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_USER
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: RABBITMQ_USER
            - name: TAIGA_SITES_SCHEME
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_SITES_SCHEME
            - name: TAIGA_SITES_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_SITES_DOMAIN
            - name: TAIGA_SUBPATH
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_SUBPATH
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_DB_NAME
            - name: TAIGA_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_ALLOWED_HOSTS
            - name: TAIGA_ADMIN_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: taiga-config
                  key: TAIGA_ADMIN_USERNAME
            - name: TAIGA_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: TAIGA_ADMIN_EMAIL
            - name: PUBLIC_REGISTER_ENABLED
              value: 'True'
            - name: TAIGA_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: TAIGA_ADMIN_EMAIL
            - name: TAIGA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: TAIGA_ADMIN_PASSWORD
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: POSTGRES_PASSWORD
            - name: RABBITMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: RABBITMQ_PASS
            - name: TAIGA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: SECRET_KEY
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: taiga-secret
                  key: SECRET_KEY
          resources:
            requests:
              memory: '256Mi'
              cpu: '500m'
            limits:
              memory: '512Mi'
              cpu: '1000m'
          volumeMounts:
            - name: taiga-static-data
              mountPath: /taiga-back/static
            - name: taiga-media-data
              mountPath: /taiga-back/media
      volumes:
        - name: taiga-static-data
          persistentVolumeClaim:
            claimName: taiga-static-data-pvc
        - name: taiga-media-data
          persistentVolumeClaim:
            claimName: taiga-media-data-pvc
